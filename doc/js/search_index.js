var search_data = {"index":{"searchIndex":["board","move","knight_moves()","list_parents()","moves()","new()","readme"],"longSearchIndex":["board","move","board#knight_moves()","board#list_parents()","move#moves()","move::new()",""],"info":[["Board","","Board.html","","<p>Main class following the path taken by a Knight&#39;s Moves\n"],["Move","","Move.html","","<p>Helper class for Board. Creates individual objects for each Knights Move.\n"],["knight_moves","Board","Board.html#method-i-knight_moves","(strt_coord, end_coord)","<p>Calculates the shortest number of moves a chess Knight can take between the\nStrt and End Coordinates …\n"],["list_parents","Board","Board.html#method-i-list_parents","(move)","<p>Creates a string of the moves taken to reach the end coordinate by using\ntheir @parent values.\n"],["moves","Move","Move.html#method-i-moves","(coord)","<p>For a given start coordinate sets the Moves @links with all posibble move\ncombinations that stay within …\n"],["new","Move","Move.html#method-c-new","(coord, parent= nil)",""],["README","","README_md.html","","<p>SCOPE\n<p>Knights Travails project from The Odin Project curriculum at\nwww.theodinproject.com/courses/ruby-programming/lessons/data-structures-and-algorithms?ref=lnav\n…\n"]]}}